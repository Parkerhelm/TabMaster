/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/counting_screen/CountingViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

CountingViewBase::CountingViewBase() :
    buttonCallback(this, &CountingViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    Background.setXY(0, 0);
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BACKGROUNDS_800X480_METEOR_RAIN_ID));
    add(Background);

    Current_Count.setXY(366, 240);
    Current_Count.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Current_Count.setLinespacing(0);
    touchgfx::Unicode::snprintf(Current_CountBuffer1, CURRENT_COUNTBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_J04Q).getText());
    Current_Count.setWildcard1(Current_CountBuffer1);
    touchgfx::Unicode::snprintf(Current_CountBuffer2, CURRENT_COUNTBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_B67H).getText());
    Current_Count.setWildcard2(Current_CountBuffer2);
    Current_Count.resizeToCurrentText();
    Current_Count.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4ZXT));
    add(Current_Count);

    Stop_Counting_Button.setXY(160, 363);
    Stop_Counting_Button.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_LARGE_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_LARGE_ROUND_PRESSED_ID));
    Stop_Counting_Button.setAction(buttonCallback);
    add(Stop_Counting_Button);

    Stop_Counting.setXY(230, 370);
    Stop_Counting.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Stop_Counting.setLinespacing(0);
    Stop_Counting.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OD8M));
    add(Stop_Counting);

    Logo.setXY(50, 0);
    Logo.setBitmap(touchgfx::Bitmap(BITMAP_LOGO_700PX_WIDE_ID));
    add(Logo);

    Progress_Box.setXY(250, 292);
    Progress_Box.setProgressIndicatorPosition(0, 0, 300, 10);
    Progress_Box.setRange(0, 100);
    Progress_Box.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    Progress_Box.setBackground(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BOXPROGRESS_NORMAL_MEDIUM_ID));
    Progress_Box.setColor(touchgfx::Color::getColorFromRGB(230, 0, 126));
    Progress_Box.setValue(60);
    add(Progress_Box);
}

CountingViewBase::~CountingViewBase()
{

}

void CountingViewBase::setupScreen()
{
    transitionBegins();
}

void CountingViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Stop_Counting_Button)
    {
        //change_to_ms
        //When Stop_Counting_Button clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
        //stop_count
        //When Stop_Counting_Button clicked call virtual function
        //Call stop_count_btn_vf
        stop_count_btn_vf();
    }
}

void CountingViewBase::transitionBegins()
{
    //max_count_update
    //When screen transition begins call virtual function
    //Call update_max_cnt_vf
    update_max_cnt_vf();
}
