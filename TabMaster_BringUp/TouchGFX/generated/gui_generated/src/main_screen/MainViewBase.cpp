/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    Background.setXY(0, 0);
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BACKGROUNDS_800X480_METEOR_RAIN_ID));
    add(Background);

    Start_Button.setXY(8, 168);
    Start_Button.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUND_PRESSED_ID));
    Start_Button.setAction(buttonCallback);
    add(Start_Button);

    Reset_Button.setXY(564, 168);
    Reset_Button.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUND_PRESSED_ID));
    Reset_Button.setAction(buttonCallback);
    add(Reset_Button);

    Fifty_Button.setXY(42, 249);
    Fifty_Button.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_FILL_PRESSED_ID));
    Fifty_Button.setAction(buttonCallback);
    add(Fifty_Button);

    Ten_Button.setXY(285, 249);
    Ten_Button.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_FILL_PRESSED_ID));
    Ten_Button.setAction(buttonCallback);
    add(Ten_Button);

    One_Button.setXY(528, 249);
    One_Button.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_LARGE_FILL_PRESSED_ID));
    One_Button.setAction(buttonCallback);
    add(One_Button);

    Plus_10.setXY(365, 344);
    Plus_10.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Plus_10.setLinespacing(0);
    Plus_10.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GJOS));
    add(Plus_10);

    Plus_50.setXY(122, 344);
    Plus_50.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Plus_50.setLinespacing(0);
    Plus_50.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FYMJ));
    add(Plus_50);

    Plus_1.setXY(620, 344);
    Plus_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Plus_1.setLinespacing(0);
    Plus_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CM2Y));
    add(Plus_1);

    Count.setXY(313, 174);
    Count.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Count.setLinespacing(0);
    Unicode::snprintf(CountBuffer, COUNT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CK83).getText());
    Count.setWildcard(CountBuffer);
    Count.resizeToCurrentText();
    Count.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OVJX));
    add(Count);

    Start.setXY(72, 174);
    Start.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Start.setLinespacing(0);
    Start.setTypedText(touchgfx::TypedText(T___SINGLEUSE_P6ZH));
    add(Start);

    Reset.setXY(622, 175);
    Reset.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Reset.setLinespacing(0);
    Reset.setTypedText(touchgfx::TypedText(T___SINGLEUSE_E70N));
    add(Reset);

    Logo.setXY(56, -30);
    Logo.setBitmap(touchgfx::Bitmap(BITMAP_LOGO_700PX_WIDE_ID));
    add(Logo);
}

MainViewBase::~MainViewBase()
{

}

void MainViewBase::setupScreen()
{

}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Start_Button)
    {
        //Change_to_CS
        //When Start_Button clicked change screen to Counting
        //Go to Counting with no screen transition
        application().gotoCountingScreenNoTransition();
        //start_counting
        //When Start_Button clicked call virtual function
        //Call start_btn_vf
        start_btn_vf();
    }
    if (&src == &Reset_Button)
    {
        //reset_count
        //When Reset_Button clicked call virtual function
        //Call reset_btn_vf
        reset_btn_vf();
    }
    if (&src == &Fifty_Button)
    {
        //plus_50
        //When Fifty_Button clicked call virtual function
        //Call p50_btn_vf
        p50_btn_vf();
    }
    if (&src == &Ten_Button)
    {
        //plus_10
        //When Ten_Button clicked call virtual function
        //Call p10_btn_vf
        p10_btn_vf();
    }
    if (&src == &One_Button)
    {
        //plus_1
        //When One_Button clicked call virtual function
        //Call p1_btn_vf
        p1_btn_vf();
    }
}
